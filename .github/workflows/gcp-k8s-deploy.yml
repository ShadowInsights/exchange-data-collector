name: Build and Deploy to GKE

on:
  push:
    branches: [ "main" ]

env:
  PROJECT_ID: web3-metrics
  GAR_LOCATION: asia-southeast1
  GKE_CLUSTER: development-cluster-1
  GKE_ZONE: asia-southeast1
  DEPLOYMENT_NAME: exchange-data-collector
  REPOSITORY: exchange-data-collector
  IMAGE: exchange-data-collector

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest

    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    # Configure Workload Identity Federation and generate an access token.
    - name: Google Auth
      id: auth
      uses: google-github-actions/auth@v0
      with:
        token_format: "access_token"
        workload_identity_provider: "${{ secrets.WIF_PROVIDER }}"
        service_account: "${{ secrets.WIF_SERVICE_ACCOUNT }}"

    - name: Docker configuration
      run: |-
        echo ${{steps.auth.outputs.access_token}} | docker login -u oauth2accesstoken --password-stdin https://$GAR_LOCATION-docker.pkg.dev
    # Get the GKE credentials so we can deploy to the cluster
    - name: Set up GKE credentials
      uses: google-github-actions/get-gke-credentials@v0
      with:
        cluster_name: ${{ env.GKE_CLUSTER }}
        location: ${{ env.GKE_ZONE }}

    # Build the Docker image
    - name: Build
      run: |-
        docker build \
          --tag "$GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/$IMAGE:$GITHUB_SHA" \
          --build-arg GITHUB_SHA="$GITHUB_SHA" \
          --build-arg GITHUB_REF="$GITHUB_REF" \
          .
    # Push the Docker image to Google Artifact Registry
    - name: Publish
      run: |-
        docker push "$GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/$IMAGE:$GITHUB_SHA"
    # Set up kustomize
    - name: Deploy
      run: |-
        # Update the Deployment with the new image
        kubectl set image deployment/$DEPLOYMENT_NAME $CONTAINER_NAME=$GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/$IMAGE:$GITHUB_SHA
        # Check the rollout status
        kubectl rollout status deployment/$DEPLOYMENT_NAME
        kubectl get services -o wide