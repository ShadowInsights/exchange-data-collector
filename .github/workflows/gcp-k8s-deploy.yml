name: Build and Deploy to GKE

on:
  push:
    branches: ["main"]
  workflow_dispatch:

env:
  PROJECT_ID: lumenus-407114
  GAR_LOCATION: us-central1
  GKE_CLUSTER: lumenus-29u9-usc1
  GKE_ZONE: us-central1
  DEPLOYMENT_NAME: exchange-data-collector
  REPOSITORY: exchange-data-collector
  IMAGE: exchange-data-collector

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest

    permissions:
      contents: "read"
      id-token: "write"

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      # Configure Workload Identity Federation and generate an access token.
      - name: Google Auth
        id: auth
        uses: google-github-actions/auth@v0
        with:
          token_format: "access_token"
          workload_identity_provider: "${{ secrets.WIF_PROVIDER }}"
          service_account: "${{ secrets.WIF_SERVICE_ACCOUNT }}"

      - name: Docker configuration
        run: |-
          echo ${{steps.auth.outputs.access_token}} | docker login -u oauth2accesstoken --password-stdin https://$GAR_LOCATION-docker.pkg.dev

      # Get the GKE credentials so we can deploy to the cluster
      - name: Set up GKE credentials
        uses: google-github-actions/get-gke-credentials@v0
        with:
          cluster_name: ${{ env.GKE_CLUSTER }}
          location: ${{ env.GKE_ZONE }}

      # Build the Docker image
      - name: Build
        run: |-
          docker build \
            --tag "$GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/$IMAGE:$GITHUB_SHA" \
            --build-arg GITHUB_SHA="$GITHUB_SHA" \
            --build-arg GITHUB_REF="$GITHUB_REF" \
            .

      # Push the Docker image to Google Artifact Registry
      - name: Publish
        run: |-
          docker push "$GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/$IMAGE:$GITHUB_SHA"

      # Run the Alembic migrations
      - name: Alembic Migrations
        run: |-
          # Replace placeholder in the job template with the actual image path
          sed "s|IMAGE_PLACEHOLDER|$GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/$IMAGE:$GITHUB_SHA|" .k8s/alembic-job.template.yml > .k8s/alembic-job.yml

          # Delete the existing job if it exists
          kubectl delete job exchange-data-collector-alembic-migration --ignore-not-found

          # Apply the Kubernetes job
          kubectl apply -f .k8s/alembic-job.yml

          # Wait for the migration job to complete
          kubectl wait --for=condition=complete job/exchange-data-collector-alembic-migration --timeout=120s

      # Deploy the Docker image to the GKE cluster
      - name: Deploy
        run: |-
          # Replace placeholder in the deployment template with the actual image path
          sed "s|IMAGE_PLACEHOLDER|$GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/$IMAGE:$GITHUB_SHA|" .k8s/templates/deployment.template.yml > .k8s/deployment.yml

          # Apply the Kubernetes deployment
          kubectl apply -f .k8s/deployment.yml

          # Check the rollout status
          kubectl rollout status deployment/$DEPLOYMENT_NAME
          kubectl get services -o wide
